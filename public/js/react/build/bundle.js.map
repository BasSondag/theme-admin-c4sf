{"version":3,"sources":["../src/app.js","../src/containers/App/constants.js","../src/containers/App/index.js","../src/containers/App/selectors.js","../src/containers/App/tests/index.test.js","../src/containers/App/tests/selectors.test.js","../src/containers/Hiragana/actions.js","../src/containers/Hiragana/constants.js","../src/containers/Hiragana/index.js","../src/containers/Hiragana/messages.js","../src/containers/Hiragana/reducer.js","../src/containers/Hiragana/sagas.js","../src/containers/Hiragana/selectors.js","../src/containers/Hiragana/tests/actions.test.js","../src/containers/Hiragana/tests/index.test.js","../src/containers/Hiragana/tests/reducer.test.js","../src/containers/Hiragana/tests/sagas.test.js","../src/containers/Hiragana/tests/selectors.test.js","../src/containers/HomePage/index.js","../src/containers/HomePage/messages.js","../src/containers/HomePage/tests/index.test.js","../src/containers/Katakana/actions.js","../src/containers/Katakana/constants.js","../src/containers/Katakana/index.js","../src/containers/Katakana/messages.js","../src/containers/Katakana/reducer.js","../src/containers/Katakana/sagas.js","../src/containers/Katakana/selectors.js","../src/containers/Katakana/tests/actions.test.js","../src/containers/Katakana/tests/index.test.js","../src/containers/Katakana/tests/reducer.test.js","../src/containers/Katakana/tests/sagas.test.js","../src/containers/Katakana/tests/selectors.test.js","../src/containers/LanguageProvider/actions.js","../src/containers/LanguageProvider/constants.js","../src/containers/LanguageProvider/index.js","../src/containers/LanguageProvider/reducer.js","../src/containers/LanguageProvider/selectors.js","../src/containers/LanguageProvider/tests/actions.test.js","../src/containers/LanguageProvider/tests/index.test.js","../src/containers/LanguageProvider/tests/reducer.test.js","../src/containers/LanguageProvider/tests/selectors.test.js","../src/containers/NotFoundPage/index.js","../src/containers/NotFoundPage/messages.js","../src/containers/NotFoundPage/tests/index.test.js","../src/containers/Sets/actions.js","../src/containers/Sets/constants.js","../src/containers/Sets/index.js","../src/containers/Sets/messages.js","../src/containers/Sets/reducer.js","../src/containers/Sets/sagas.js","../src/containers/Sets/selectors.js","../src/containers/Sets/tests/actions.test.js","../src/containers/Sets/tests/index.test.js","../src/containers/Sets/tests/reducer.test.js","../src/containers/Sets/tests/sagas.test.js","../src/containers/Sets/tests/selectors.test.js","../src/global-styles.js","../src/i18n.js","../src/reducers.js","../src/routes.js","../src/store.js","../src/tests/i18n.test.js","../src/tests/store.test.js","../src/utils/asyncInjectors.js","../src/utils/tests/asyncInjectors.test.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\n// Needed for redux-saga es6 generator support\nimport 'babel-polyfill';\n\n// Import all the third party stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyRouterMiddleware, Router, browserHistory } from 'react-router';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { useScroll } from 'react-router-scroll';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from 'containers/App';\n\n// Import selector for `syncHistoryWithStore`\nimport { makeSelectLocationState } from 'containers/App/selectors';\n\n// Import Language Provider\nimport LanguageProvider from 'containers/LanguageProvider';\n\n// Load the favicon, the manifest.json file and the .htaccess file\n/* eslint-disable import/no-unresolved, import/extensions */\nimport '!file-loader?name=[name].[ext]!./favicon.ico';\nimport '!file-loader?name=[name].[ext]!./manifest.json';\nimport 'file-loader?name=[name].[ext]!./.htaccess';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport configureStore from './store';\n\n// Import i18n messages\nimport { translationMessages } from './i18n';\n\n// Import CSS reset and Global Styles\nimport './global-styles';\n\n// Import root routes\nimport createRoutes from './routes';\n\n// Create redux store with history\n// this uses the singleton browserHistory provided by react-router\n// Optionally, this could be changed to leverage a created history\n// e.g. `const browserHistory = useRouterHistory(createBrowserHistory)();`\nconst initialState = {};\nconst store = configureStore(initialState, browserHistory);\n\n// Sync history and store, as the react-router-redux reducer\n// is under the non-default key (\"routing\"), selectLocationState\n// must be provided for resolving how to retrieve the \"route\" in the state\nconst history = syncHistoryWithStore(browserHistory, store, {\n  selectLocationState: makeSelectLocationState(),\n});\n\n// Set up the router, wrapping all Routes in the App component\nconst rootRoute = {\n  component: App,\n  childRoutes: createRoutes(store),\n};\n\nconst render = (messages) => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <LanguageProvider messages={messages}>\n        <Router\n          history={history}\n          routes={rootRoute}\n          render={\n            // Scroll to top when going to a new page, imitating default browser\n            // behaviour\n            applyRouterMiddleware(useScroll())\n          }\n        />\n      </LanguageProvider>\n    </Provider>,\n    document.getElementById('app')\n  );\n};\n\n// Hot reloadable translation json files\nif (module.hot) {\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  module.hot.accept('./i18n', () => {\n    render(translationMessages);\n  });\n}\n\n// Chunked polyfill for browsers without Intl support\nif (!window.Intl) {\n  (new Promise((resolve) => {\n    resolve(import('intl'));\n  }))\n    .then(() => Promise.all([\n      import('intl/locale-data/jsonp/en.js'),\n    ]))\n    .then(() => render(translationMessages))\n    .catch((err) => {\n      throw err;\n    });\n} else {\n  render(translationMessages);\n}\n\n// Install ServiceWorker and AppCache in the end since\n// it's not most important operation and if main code fails,\n// we do not want it installed\nif (process.env.NODE_ENV === 'production') {\n  require('offline-plugin/runtime').install(); // eslint-disable-line global-require\n}\n","/*\n * AppConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const DEFAULT_LOCALE = 'en';\n","/**\n *\n * App.react.js\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n *\n * NOTE: while this component should technically be a stateless functional\n * component (SFC), hot reloading does not currently support SFCs. If hot\n * reloading is not a necessity for you then you can refactor it and remove\n * the linting exception.\n */\n\nimport React from 'react';\n\nexport default class App extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n\n  static propTypes = {\n    children: React.PropTypes.node,\n  };\n\n  render() {\n    return (\n      <div>\n        {React.Children.toArray(this.props.children)}\n      </div>\n    );\n  }\n}\n","// makeSelectLocationState expects a plain JS object for the routing state\nconst makeSelectLocationState = () => {\n  let prevRoutingState;\n  let prevRoutingStateJS;\n\n  return (state) => {\n    const routingState = state.get('route'); // or state.route\n\n    if (!routingState.equals(prevRoutingState)) {\n      prevRoutingState = routingState;\n      prevRoutingStateJS = routingState.toJS();\n    }\n\n    return prevRoutingStateJS;\n  };\n};\n\nexport {\n  makeSelectLocationState,\n};\n","import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport App from '../index';\n\ndescribe('<App />', () => {\n  it('should render its children', () => {\n    const children = (<h1>Test</h1>);\n    const renderedComponent = shallow(\n      <App>\n        {children}\n      </App>\n    );\n    expect(renderedComponent.contains(children)).toBe(true);\n  });\n});\n","import { fromJS } from 'immutable';\n\nimport { makeSelectLocationState } from 'containers/App/selectors';\n\ndescribe('makeSelectLocationState', () => {\n  it('should select the route as a plain JS object', () => {\n    const route = fromJS({\n      locationBeforeTransitions: null,\n    });\n    const mockedState = fromJS({\n      route,\n    });\n    expect(makeSelectLocationState()(mockedState)).toEqual(route.toJS());\n  });\n\n  it('should return cached js routeState for same concurrent calls', () => {\n    const route = fromJS({\n      locationBeforeTransitions: null,\n    });\n    const mockedState = fromJS({\n      route,\n    });\n    const selectLocationState = makeSelectLocationState();\n\n    const firstRouteStateJS = selectLocationState(mockedState);\n    expect(selectLocationState(mockedState)).toBe(firstRouteStateJS);\n  });\n});\n","/*\n *\n * Hiragana actions\n *\n */\n\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nexport function defaultAction() {\n  return {\n    type: DEFAULT_ACTION,\n  };\n}\n","/*\n *\n * Hiragana constants\n *\n */\n\nexport const DEFAULT_ACTION = 'app/Hiragana/DEFAULT_ACTION';\n","/*\n *\n * Hiragana\n *\n */\n\nimport React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { createStructuredSelector } from 'reselect';\nimport makeSelectHiragana from './selectors';\nimport messages from './messages';\n\nexport class Hiragana extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div>\n        <Helmet\n          title=\"Hiragana\"\n          meta={[\n            { name: 'description', content: 'Description of Hiragana' },\n          ]}\n        />\n        <FormattedMessage {...messages.header} />\n      </div>\n    );\n  }\n}\n\nHiragana.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  hiragana: makeSelectHiragana(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hiragana);\n","/*\n * Hiragana Messages\n *\n * This contains all the text for the Hiragana component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.containers.Hiragana.header',\n    defaultMessage: 'This is Hiragana container !',\n  },\n});\n","/*\n *\n * Hiragana reducer\n *\n */\n\nimport { fromJS } from 'immutable';\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nconst initialState = fromJS({});\n\nfunction hiraganaReducer(state = initialState, action) {\n  switch (action.type) {\n    case DEFAULT_ACTION:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default hiraganaReducer;\n","// import { take, call, put, select } from 'redux-saga/effects';\n\n// Individual exports for testing\nexport function* defaultSaga() {\n  // See example in containers/HomePage/sagas.js\n}\n\n// All sagas to be loaded\nexport default [\n  defaultSaga,\n];\n","import { createSelector } from 'reselect';\n\n/**\n * Direct selector to the hiragana state domain\n */\nconst selectHiraganaDomain = () => (state) => state.get('hiragana');\n\n/**\n * Other specific selectors\n */\n\n\n/**\n * Default selector used by Hiragana\n */\n\nconst makeSelectHiragana = () => createSelector(\n  selectHiraganaDomain(),\n  (substate) => substate.toJS()\n);\n\nexport default makeSelectHiragana;\nexport {\n  selectHiraganaDomain,\n};\n","\nimport {\n  defaultAction,\n} from '../actions';\nimport {\n  DEFAULT_ACTION,\n} from '../constants';\n\ndescribe('Hiragana actions', () => {\n  describe('Default Action', () => {\n    it('has a type of DEFAULT_ACTION', () => {\n      const expected = {\n        type: DEFAULT_ACTION,\n      };\n      expect(defaultAction()).toEqual(expected);\n    });\n  });\n});\n","// import React from 'react';\n// import { shallow } from 'enzyme';\n\n// import { Hiragana } from '../index';\n\ndescribe('<Hiragana />', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","\nimport { fromJS } from 'immutable';\nimport hiraganaReducer from '../reducer';\n\ndescribe('hiraganaReducer', () => {\n  it('returns the initial state', () => {\n    expect(hiraganaReducer(undefined, {})).toEqual(fromJS({}));\n  });\n});\n","/**\n * Test  sagas\n */\n\n/* eslint-disable redux-saga/yield-effects */\n// import { take, call, put, select } from 'redux-saga/effects';\n// import { defaultSaga } from '../sagas';\n\n// const generator = defaultSaga();\n\ndescribe('defaultSaga Saga', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","// import { fromJS } from 'immutable';\n// import { makeSelectHiraganaDomain } from '../selectors';\n\n// const selector = makeSelectHiraganaDomain();\n\ndescribe('makeSelectHiraganaDomain', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n *\n * NOTE: while this component should technically be a stateless functional\n * component (SFC), hot reloading does not currently support SFCs. If hot\n * reloading is not a necessity for you then you can refactor it and remove\n * the linting exception.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\n\nexport default class HomePage extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <h1>\n        <FormattedMessage {...messages.header} />\n      </h1>\n    );\n  }\n}\n","/*\n * HomePage Messages\n *\n * This contains all the text for the HomePage component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.components.HomePage.header',\n    defaultMessage: 'This is HomePage component!',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { shallow } from 'enzyme';\n\nimport HomePage from '../index';\nimport messages from '../messages';\n\ndescribe('<HomePage />', () => {\n  it('should render the page message', () => {\n    const renderedComponent = shallow(\n      <HomePage />\n    );\n    expect(renderedComponent.contains(\n      <FormattedMessage {...messages.header} />\n    )).toEqual(true);\n  });\n});\n","/*\n *\n * Katakana actions\n *\n */\n\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nexport function defaultAction() {\n  return {\n    type: DEFAULT_ACTION,\n  };\n}\n","/*\n *\n * Katakana constants\n *\n */\n\nexport const DEFAULT_ACTION = 'app/Katakana/DEFAULT_ACTION';\n","/*\n *\n * Katakana\n *\n */\n\nimport React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { createStructuredSelector } from 'reselect';\nimport makeSelectKatakana from './selectors';\nimport messages from './messages';\n\nexport class Katakana extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div>\n        <Helmet\n          title=\"Katakana\"\n          meta={[\n            { name: 'description', content: 'Description of Katakana' },\n          ]}\n        />\n        <FormattedMessage {...messages.header} />\n      </div>\n    );\n  }\n}\n\nKatakana.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  katakana: makeSelectKatakana(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Katakana);\n","/*\n * Katakana Messages\n *\n * This contains all the text for the Katakana component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.containers.Katakana.header',\n    defaultMessage: 'This is Katakana container !',\n  },\n});\n","/*\n *\n * Katakana reducer\n *\n */\n\nimport { fromJS } from 'immutable';\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nconst initialState = fromJS({});\n\nfunction katakanaReducer(state = initialState, action) {\n  switch (action.type) {\n    case DEFAULT_ACTION:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default katakanaReducer;\n","// import { take, call, put, select } from 'redux-saga/effects';\n\n// Individual exports for testing\nexport function* defaultSaga() {\n  // See example in containers/HomePage/sagas.js\n}\n\n// All sagas to be loaded\nexport default [\n  defaultSaga,\n];\n","import { createSelector } from 'reselect';\n\n/**\n * Direct selector to the katakana state domain\n */\nconst selectKatakanaDomain = () => (state) => state.get('katakana');\n\n/**\n * Other specific selectors\n */\n\n\n/**\n * Default selector used by Katakana\n */\n\nconst makeSelectKatakana = () => createSelector(\n  selectKatakanaDomain(),\n  (substate) => substate.toJS()\n);\n\nexport default makeSelectKatakana;\nexport {\n  selectKatakanaDomain,\n};\n","\nimport {\n  defaultAction,\n} from '../actions';\nimport {\n  DEFAULT_ACTION,\n} from '../constants';\n\ndescribe('Katakana actions', () => {\n  describe('Default Action', () => {\n    it('has a type of DEFAULT_ACTION', () => {\n      const expected = {\n        type: DEFAULT_ACTION,\n      };\n      expect(defaultAction()).toEqual(expected);\n    });\n  });\n});\n","// import React from 'react';\n// import { shallow } from 'enzyme';\n\n// import { Katakana } from '../index';\n\ndescribe('<Katakana />', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","\nimport { fromJS } from 'immutable';\nimport katakanaReducer from '../reducer';\n\ndescribe('katakanaReducer', () => {\n  it('returns the initial state', () => {\n    expect(katakanaReducer(undefined, {})).toEqual(fromJS({}));\n  });\n});\n","/**\n * Test  sagas\n */\n\n/* eslint-disable redux-saga/yield-effects */\n// import { take, call, put, select } from 'redux-saga/effects';\n// import { defaultSaga } from '../sagas';\n\n// const generator = defaultSaga();\n\ndescribe('defaultSaga Saga', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","// import { fromJS } from 'immutable';\n// import { makeSelectKatakanaDomain } from '../selectors';\n\n// const selector = makeSelectKatakanaDomain();\n\ndescribe('makeSelectKatakanaDomain', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","/*\n *\n * LanguageProvider actions\n *\n */\n\nimport {\n  CHANGE_LOCALE,\n} from './constants';\n\nexport function changeLocale(languageLocale) {\n  return {\n    type: CHANGE_LOCALE,\n    locale: languageLocale,\n  };\n}\n","/*\n *\n * LanguageProvider constants\n *\n */\n\nexport const CHANGE_LOCALE = 'app/LanguageToggle/CHANGE_LOCALE';\nexport const DEFAULT_LOCALE = 'en';\n","/*\n *\n * LanguageProvider\n *\n * this component connects the redux state language locale to the\n * IntlProvider component and i18n messages (loaded from `app/translations`)\n */\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { IntlProvider } from 'react-intl';\n\nimport { makeSelectLocale } from './selectors';\n\nexport class LanguageProvider extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <IntlProvider locale={this.props.locale} key={this.props.locale} messages={this.props.messages[this.props.locale]}>\n        {React.Children.only(this.props.children)}\n      </IntlProvider>\n    );\n  }\n}\n\nLanguageProvider.propTypes = {\n  locale: React.PropTypes.string,\n  messages: React.PropTypes.object,\n  children: React.PropTypes.element.isRequired,\n};\n\n\nconst mapStateToProps = createSelector(\n  makeSelectLocale(),\n  (locale) => ({ locale })\n);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageProvider);\n","/*\n *\n * LanguageProvider reducer\n *\n */\n\nimport { fromJS } from 'immutable';\n\nimport {\n  CHANGE_LOCALE,\n} from './constants';\nimport {\n  DEFAULT_LOCALE,\n} from '../App/constants'; // eslint-disable-line\n\nconst initialState = fromJS({\n  locale: DEFAULT_LOCALE,\n});\n\nfunction languageProviderReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      return state\n        .set('locale', action.locale);\n    default:\n      return state;\n  }\n}\n\nexport default languageProviderReducer;\n","import { createSelector } from 'reselect';\n\n/**\n * Direct selector to the languageToggle state domain\n */\nconst selectLanguage = (state) => state.get('language');\n\n/**\n * Select the language locale\n */\n\nconst makeSelectLocale = () => createSelector(\n  selectLanguage,\n  (languageState) => languageState.get('locale')\n);\n\nexport {\n  selectLanguage,\n  makeSelectLocale,\n};\n","import {\n  changeLocale,\n} from '../actions';\n\nimport {\n  CHANGE_LOCALE,\n} from '../constants';\n\ndescribe('LanguageProvider actions', () => {\n  describe('Change Local Action', () => {\n    it('has a type of CHANGE_LOCALE', () => {\n      const expected = {\n        type: CHANGE_LOCALE,\n        locale: 'de',\n      };\n      expect(changeLocale('de')).toEqual(expected);\n    });\n  });\n});\n","import React from 'react';\nimport { shallow, mount } from 'enzyme';\nimport { FormattedMessage, defineMessages } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { browserHistory } from 'react-router';\n\nimport ConnectedLanguageProvider, { LanguageProvider } from '../index';\nimport configureStore from '../../../store';\n\nimport { translationMessages } from '../../../i18n';\n\nconst messages = defineMessages({\n  someMessage: {\n    id: 'some.id',\n    defaultMessage: 'This is some default message',\n    en: 'This is some en message',\n  },\n});\n\ndescribe('<LanguageProvider />', () => {\n  it('should render its children', () => {\n    const children = (<h1>Test</h1>);\n    const renderedComponent = shallow(\n      <LanguageProvider messages={messages} locale=\"en\">\n        {children}\n      </LanguageProvider>\n    );\n    expect(renderedComponent.contains(children)).toBe(true);\n  });\n});\n\ndescribe('<ConnectedLanguageProvider />', () => {\n  let store;\n\n  beforeAll(() => {\n    store = configureStore({}, browserHistory);\n  });\n\n  it('should render the default language messages', () => {\n    const renderedComponent = mount(\n      <Provider store={store}>\n        <ConnectedLanguageProvider messages={translationMessages}>\n          <FormattedMessage {...messages.someMessage} />\n        </ConnectedLanguageProvider>\n      </Provider>\n    );\n    expect(renderedComponent.contains(<FormattedMessage {...messages.someMessage} />)).toBe(true);\n  });\n});\n","import { fromJS } from 'immutable';\n\nimport languageProviderReducer from '../reducer';\nimport {\n  CHANGE_LOCALE,\n} from '../constants';\n\ndescribe('languageProviderReducer', () => {\n  it('returns the initial state', () => {\n    expect(languageProviderReducer(undefined, {})).toEqual(fromJS({\n      locale: 'en',\n    }));\n  });\n\n  it('changes the locale', () => {\n    expect(languageProviderReducer(undefined, { type: CHANGE_LOCALE, locale: 'de' }).toJS()).toEqual({\n      locale: 'de',\n    });\n  });\n});\n","import { fromJS } from 'immutable';\n\nimport {\n  selectLanguage,\n} from '../selectors';\n\ndescribe('selectLanguage', () => {\n  it('should select the global state', () => {\n    const globalState = fromJS({});\n    const mockedState = fromJS({\n      language: globalState,\n    });\n    expect(selectLanguage(mockedState)).toEqual(globalState);\n  });\n});\n","/**\n * NotFoundPage\n *\n * This is the page we show when the user visits a url that doesn't have a route\n *\n * NOTE: while this component should technically be a stateless functional\n * component (SFC), hot reloading does not currently support SFCs. If hot\n * reloading is not a necessity for you then you can refactor it and remove\n * the linting exception.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\n\nexport default class NotFound extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <h1>\n        <FormattedMessage {...messages.header} />\n      </h1>\n    );\n  }\n}\n","/*\n * NotFoundPage Messages\n *\n * This contains all the text for the NotFoundPage component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.components.NotFoundPage.header',\n    defaultMessage: 'This is NotFoundPage component!',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { shallow } from 'enzyme';\n\nimport NotFoundPage from '../index';\nimport messages from '../messages';\n\ndescribe('<NotFoundPage />', () => {\n  it('should render the page message', () => {\n    const renderedComponent = shallow(\n      <NotFoundPage />\n    );\n    expect(renderedComponent.contains(\n      <FormattedMessage {...messages.header} />\n    )).toEqual(true);\n  });\n});\n","/*\n *\n * Sets actions\n *\n */\n\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nexport function defaultAction() {\n  return {\n    type: DEFAULT_ACTION,\n  };\n}\n","/*\n *\n * Sets constants\n *\n */\n\nexport const DEFAULT_ACTION = 'app/Sets/DEFAULT_ACTION';\n","/*\n *\n * Sets\n *\n */\n\nimport React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { createStructuredSelector } from 'reselect';\nimport makeSelectSets from './selectors';\nimport messages from './messages';\n\nexport class Sets extends React.PureComponent { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    return (\n      <div>\n        <Helmet\n          title=\"Sets\"\n          meta={[\n            { name: 'description', content: 'Description of Sets' },\n          ]}\n        />\n        <FormattedMessage {...messages.header} />\n      </div>\n    );\n  }\n}\n\nSets.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  sets: makeSelectSets(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sets);\n","/*\n * Sets Messages\n *\n * This contains all the text for the Sets component.\n */\nimport { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  header: {\n    id: 'app.containers.Sets.header',\n    defaultMessage: 'This is Sets container !',\n  },\n});\n","/*\n *\n * Sets reducer\n *\n */\n\nimport { fromJS } from 'immutable';\nimport {\n  DEFAULT_ACTION,\n} from './constants';\n\nconst initialState = fromJS({});\n\nfunction setsReducer(state = initialState, action) {\n  switch (action.type) {\n    case DEFAULT_ACTION:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default setsReducer;\n","// import { take, call, put, select } from 'redux-saga/effects';\n\n// Individual exports for testing\nexport function* defaultSaga() {\n  // See example in containers/HomePage/sagas.js\n}\n\n// All sagas to be loaded\nexport default [\n  defaultSaga,\n];\n","import { createSelector } from 'reselect';\n\n/**\n * Direct selector to the sets state domain\n */\nconst selectSetsDomain = () => (state) => state.get('sets');\n\n/**\n * Other specific selectors\n */\n\n\n/**\n * Default selector used by Sets\n */\n\nconst makeSelectSets = () => createSelector(\n  selectSetsDomain(),\n  (substate) => substate.toJS()\n);\n\nexport default makeSelectSets;\nexport {\n  selectSetsDomain,\n};\n","\nimport {\n  defaultAction,\n} from '../actions';\nimport {\n  DEFAULT_ACTION,\n} from '../constants';\n\ndescribe('Sets actions', () => {\n  describe('Default Action', () => {\n    it('has a type of DEFAULT_ACTION', () => {\n      const expected = {\n        type: DEFAULT_ACTION,\n      };\n      expect(defaultAction()).toEqual(expected);\n    });\n  });\n});\n","// import React from 'react';\n// import { shallow } from 'enzyme';\n\n// import { Sets } from '../index';\n\ndescribe('<Sets />', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","\nimport { fromJS } from 'immutable';\nimport setsReducer from '../reducer';\n\ndescribe('setsReducer', () => {\n  it('returns the initial state', () => {\n    expect(setsReducer(undefined, {})).toEqual(fromJS({}));\n  });\n});\n","/**\n * Test  sagas\n */\n\n/* eslint-disable redux-saga/yield-effects */\n// import { take, call, put, select } from 'redux-saga/effects';\n// import { defaultSaga } from '../sagas';\n\n// const generator = defaultSaga();\n\ndescribe('defaultSaga Saga', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","// import { fromJS } from 'immutable';\n// import { makeSelectSetsDomain } from '../selectors';\n\n// const selector = makeSelectSetsDomain();\n\ndescribe('makeSelectSetsDomain', () => {\n  it('Expect to have unit tests specified', () => {\n    expect(true).toEqual(false);\n  });\n});\n","import { injectGlobal } from 'styled-components';\n\n/* eslint no-unused-expressions: 0 */\ninjectGlobal`\n  html,\n  body {\n    height: 100%;\n    width: 100%;\n  }\n\n  body {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  body.fontLoaded {\n    font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  #app {\n    background-color: #fafafa;\n    min-height: 100%;\n    min-width: 100%;\n  }\n\n  p,\n  label {\n    font-family: Georgia, Times, 'Times New Roman', serif;\n    line-height: 1.5em;\n  }\n`;\n","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your app.\n *\n */\nimport { addLocaleData } from 'react-intl';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport jaLocaleData from 'react-intl/locale-data/ja';\n\nimport { DEFAULT_LOCALE } from './containers/App/constants'; // eslint-disable-line\nimport enTranslationMessages from './translations/en.json';\nimport jaTranslationMessages from './translations/ja.json';\n\nexport const appLocales = [\n  'en',\n  'ja',\n];\n\naddLocaleData(enLocaleData);\naddLocaleData(jaLocaleData);\n\nexport const formatTranslationMessages = (locale, messages) => {\n  const defaultFormattedMessages = locale !== DEFAULT_LOCALE\n    ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages)\n    : {};\n  return Object.keys(messages).reduce((formattedMessages, key) => {\n    let message = messages[key];\n    if (!message && locale !== DEFAULT_LOCALE) {\n      message = defaultFormattedMessages[key];\n    }\n    return Object.assign(formattedMessages, { [key]: message });\n  }, {});\n};\n\nexport const translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages),\n  ja: formatTranslationMessages('ja', jaTranslationMessages),\n};\n","/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux-immutable';\nimport { fromJS } from 'immutable';\nimport { LOCATION_CHANGE } from 'react-router-redux';\n\nimport languageProviderReducer from 'containers/LanguageProvider/reducer';\n\n/*\n * routeReducer\n *\n * The reducer merges route location changes into our immutable state.\n * The change is necessitated by moving to react-router-redux@4\n *\n */\n\n// Initial routing state\nconst routeInitialState = fromJS({\n  locationBeforeTransitions: null,\n});\n\n/**\n * Merge route into the global application state\n */\nfunction routeReducer(state = routeInitialState, action) {\n  switch (action.type) {\n    /* istanbul ignore next */\n    case LOCATION_CHANGE:\n      return state.merge({\n        locationBeforeTransitions: action.payload,\n      });\n    default:\n      return state;\n  }\n}\n\n/**\n * Creates the main reducer with the asynchronously loaded ones\n */\nexport default function createReducer(asyncReducers) {\n  return combineReducers({\n    route: routeReducer,\n    language: languageProviderReducer,\n    ...asyncReducers,\n  });\n}\n","// These are the pages you can go to.\n// They are all wrapped in the App component, which should contain the navbar etc\n// See http://blog.mxstbr.com/2016/01/react-apps-with-pages for more information\n// about the code splitting business\nimport { getAsyncInjectors } from 'utils/asyncInjectors';\n\nconst errorLoading = (err) => {\n  console.error('Dynamic page loading failed', err); // eslint-disable-line no-console\n};\n\nconst loadModule = (cb) => (componentModule) => {\n  cb(null, componentModule.default);\n};\n\nexport default function createRoutes(store) {\n  // Create reusable async injectors using getAsyncInjectors factory\n  const { injectReducer, injectSagas } = getAsyncInjectors(store); // eslint-disable-line no-unused-vars\n\n  return [\n    {\n      path: '/',\n      name: 'home',\n      getComponent(nextState, cb) {\n        const importModules = Promise.all([\n          import('containers/HomePage'),\n        ]);\n\n        const renderRoute = loadModule(cb);\n\n        importModules.then(([component]) => {\n          renderRoute(component);\n        });\n\n        importModules.catch(errorLoading);\n      },\n    }, {\n      path: '/sets',\n      name: 'sets',\n      getComponent(nextState, cb) {\n        const importModules = Promise.all([\n          import('containers/Sets/reducer'),\n          import('containers/Sets/sagas'),\n          import('containers/Sets'),\n        ]);\n\n        const renderRoute = loadModule(cb);\n\n        importModules.then(([reducer, sagas, component]) => {\n          injectReducer('sets', reducer.default);\n          injectSagas(sagas.default);\n          renderRoute(component);\n        });\n\n        importModules.catch(errorLoading);\n      },\n    }, {\n      path: '/hiragana',\n      name: 'hiragana',\n      getComponent(nextState, cb) {\n        const importModules = Promise.all([\n          import('containers/Hiragana/reducer'),\n          import('containers/Hiragana/sagas'),\n          import('containers/Hiragana'),\n        ]);\n\n        const renderRoute = loadModule(cb);\n\n        importModules.then(([reducer, sagas, component]) => {\n          injectReducer('hiragana', reducer.default);\n          injectSagas(sagas.default);\n          renderRoute(component);\n        });\n\n        importModules.catch(errorLoading);\n      },\n    }, {\n      path: '/katakana',\n      name: 'katakana',\n      getComponent(nextState, cb) {\n        const importModules = Promise.all([\n          import('containers/Katakana/reducer'),\n          import('containers/Katakana/sagas'),\n          import('containers/Katakana'),\n        ]);\n\n        const renderRoute = loadModule(cb);\n\n        importModules.then(([reducer, sagas, component]) => {\n          injectReducer('katakana', reducer.default);\n          injectSagas(sagas.default);\n          renderRoute(component);\n        });\n\n        importModules.catch(errorLoading);\n      },\n    }, {\n      path: '*',\n      name: 'notfound',\n      getComponent(nextState, cb) {\n        import('containers/NotFoundPage')\n          .then(loadModule(cb))\n          .catch(errorLoading);\n      },\n    },\n  ];\n}\n","/**\n * Create the store with asynchronously loaded reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { fromJS } from 'immutable';\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [\n    sagaMiddleware,\n    routerMiddleware(history),\n  ];\n\n  const enhancers = [\n    applyMiddleware(...middlewares),\n  ];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers =\n    process.env.NODE_ENV !== 'production' &&\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n  /* eslint-enable */\n\n  const store = createStore(\n    createReducer(),\n    fromJS(initialState),\n    composeEnhancers(...enhancers)\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.asyncReducers = {}; // Async reducer registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      import('./reducers').then((reducerModule) => {\n        const createReducers = reducerModule.default;\n        const nextReducers = createReducers(store.asyncReducers);\n\n        store.replaceReducer(nextReducers);\n      });\n    });\n  }\n\n  return store;\n}\n","import { DEFAULT_LOCALE } from '../containers/App/constants';\nimport { formatTranslationMessages } from '../i18n';\n\njest.mock('../translations/en.json', () => (\n  {\n    message1: 'default message',\n    message2: 'default message 2',\n  }\n));\n\nconst esTranslationMessages = {\n  message1: 'mensaje predeterminado',\n  message2: '',\n};\n\ndescribe('formatTranslationMessages', () => {\n  it('should build only defaults when DEFAULT_LOCALE', () => {\n    const result = formatTranslationMessages(DEFAULT_LOCALE, { a: 'a' });\n\n    expect(result).toEqual({ a: 'a' });\n  });\n\n\n  it('should combine default locale and current locale when not DEFAULT_LOCALE', () => {\n    const result = formatTranslationMessages('', esTranslationMessages);\n\n    expect(result).toEqual({\n      message1: 'mensaje predeterminado',\n      message2: 'default message 2',\n    });\n  });\n});\n","/**\n * Test store addons\n */\n\nimport { browserHistory } from 'react-router';\nimport configureStore from '../store';\n\ndescribe('configureStore', () => {\n  let store;\n\n  beforeAll(() => {\n    store = configureStore({}, browserHistory);\n  });\n\n  describe('asyncReducers', () => {\n    it('should contain an object for async reducers', () => {\n      expect(typeof store.asyncReducers).toBe('object');\n    });\n  });\n\n  describe('runSaga', () => {\n    it('should contain a hook for `sagaMiddleware.run`', () => {\n      expect(typeof store.runSaga).toBe('function');\n    });\n  });\n});\n","import conformsTo from 'lodash/conformsTo';\nimport isEmpty from 'lodash/isEmpty';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport invariant from 'invariant';\nimport warning from 'warning';\nimport createReducer from 'reducers';\n\n/**\n * Validate the shape of redux store\n */\nexport function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    asyncReducers: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) asyncInjectors: Expected a valid redux store'\n  );\n}\n\n/**\n * Inject an asynchronously loaded reducer\n */\nexport function injectAsyncReducer(store, isValid) {\n  return function injectReducer(name, asyncReducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(name) && !isEmpty(name) && isFunction(asyncReducer),\n      '(app/utils...) injectAsyncReducer: Expected `asyncReducer` to be a reducer function'\n    );\n\n    if (Reflect.has(store.asyncReducers, name)) return;\n\n    store.asyncReducers[name] = asyncReducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n}\n\n/**\n * Inject an asynchronously loaded saga\n */\nexport function injectAsyncSagas(store, isValid) {\n  return function injectSagas(sagas) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      Array.isArray(sagas),\n      '(app/utils...) injectAsyncSagas: Expected `sagas` to be an array of generator functions'\n    );\n\n    warning(\n      !isEmpty(sagas),\n      '(app/utils...) injectAsyncSagas: Received an empty `sagas` array'\n    );\n\n    sagas.map(store.runSaga);\n  };\n}\n\n/**\n * Helper for creating injectors\n */\nexport function getAsyncInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectAsyncReducer(store, true),\n    injectSagas: injectAsyncSagas(store, true),\n  };\n}\n","/**\n * Test async injectors\n */\n\nimport { memoryHistory } from 'react-router';\nimport { put } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport configureStore from 'store';\n\nimport {\n  injectAsyncReducer,\n  injectAsyncSagas,\n  getAsyncInjectors,\n} from '../asyncInjectors';\n\n// Fixtures\n\nconst initialState = fromJS({ reduced: 'soon' });\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'TEST':\n      return state.set('reduced', action.payload);\n    default:\n      return state;\n  }\n};\n\nfunction* testSaga() {\n  yield put({ type: 'TEST', payload: 'yup' });\n}\n\nconst sagas = [\n  testSaga,\n];\n\ndescribe('asyncInjectors', () => {\n  let store;\n\n  describe('getAsyncInjectors', () => {\n    beforeAll(() => {\n      store = configureStore({}, memoryHistory);\n    });\n\n    it('given a store, should return all async injectors', () => {\n      const { injectReducer, injectSagas } = getAsyncInjectors(store);\n\n      injectReducer('test', reducer);\n      injectSagas(sagas);\n\n      const actual = store.getState().get('test');\n      const expected = initialState.merge({ reduced: 'yup' });\n\n      expect(actual.toJS()).toEqual(expected.toJS());\n    });\n\n    it('should throw if passed invalid store shape', () => {\n      let result = false;\n\n      Reflect.deleteProperty(store, 'dispatch');\n\n      try {\n        getAsyncInjectors(store);\n      } catch (err) {\n        result = err.name === 'Invariant Violation';\n      }\n\n      expect(result).toEqual(true);\n    });\n  });\n\n  describe('helpers', () => {\n    beforeAll(() => {\n      store = configureStore({}, memoryHistory);\n    });\n\n    describe('injectAsyncReducer', () => {\n      it('given a store, it should provide a function to inject a reducer', () => {\n        const injectReducer = injectAsyncReducer(store);\n\n        injectReducer('test', reducer);\n\n        const actual = store.getState().get('test');\n        const expected = initialState;\n\n        expect(actual.toJS()).toEqual(expected.toJS());\n      });\n\n      it('should not assign reducer if already existing', () => {\n        const injectReducer = injectAsyncReducer(store);\n\n        injectReducer('test', reducer);\n        injectReducer('test', () => {});\n\n        expect(store.asyncReducers.test.toString()).toEqual(reducer.toString());\n      });\n\n      it('should throw if passed invalid name', () => {\n        let result = false;\n\n        const injectReducer = injectAsyncReducer(store);\n\n        try {\n          injectReducer('', reducer);\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        try {\n          injectReducer(999, reducer);\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        expect(result).toEqual(true);\n      });\n\n      it('should throw if passed invalid reducer', () => {\n        let result = false;\n\n        const injectReducer = injectAsyncReducer(store);\n\n        try {\n          injectReducer('bad', 'nope');\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        try {\n          injectReducer('coolio', 12345);\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        expect(result).toEqual(true);\n      });\n    });\n\n    describe('injectAsyncSagas', () => {\n      it('given a store, it should provide a function to inject a saga', () => {\n        const injectSagas = injectAsyncSagas(store);\n\n        injectSagas(sagas);\n\n        const actual = store.getState().get('test');\n        const expected = initialState.merge({ reduced: 'yup' });\n\n        expect(actual.toJS()).toEqual(expected.toJS());\n      });\n\n      it('should throw if passed invalid saga', () => {\n        let result = false;\n\n        const injectSagas = injectAsyncSagas(store);\n\n        try {\n          injectSagas({ testSaga });\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        try {\n          injectSagas(testSaga);\n        } catch (err) {\n          result = err.name === 'Invariant Violation';\n        }\n\n        expect(result).toEqual(true);\n      });\n    });\n  });\n});\n"]}